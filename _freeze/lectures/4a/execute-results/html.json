{
  "hash": "14ccab138fef6f04767d62407ad4d126",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Moment Generating Functions\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\neditor: source\n---\n\n\n\n## Learning Outcomes\n\n-   Moments\n\n-   Moment Generating Functions\n\n-   Properties\n\n# Moments and Moment Generating Functions\n\n## Moments\n\nThe *expected value* is the value we expect when we randomly sample from population that follows a specific distribution. The expected value of $Y$ is\n\n$$\nE(Y)=\\sum_y yP(y)\n$$\n\nwhere $P(y)$ is the PMF of $Y$.\n\n## Moment Generating Functions\n\nThe moment generating functions is used to obtain the $k$th moment. The mgf is defined as\n\n$$\nm(c) = E(e^{tX})\n$$\n\nThe $k$th moment can be obtained by taking the $k$th derivative of the mgf, with respect to $c$, and setting $c$ equal to 0:\n\n$$\nE(X^k)=\\frac{d^km(c)}{dc}\\Bigg|_{c=0}\n$$\n\n# Binomial Distribution\n\n## MGF\n\n## $E(Y^2)$\n\n# Poisson Distribution\n\n## MGF\n\n## $E(Y^3)$\n\n# Geometric Distribution\n\n## MGF\n\n## $E(Y)$\n\n# Expected Value Properties\n\n## Properties\n\n1.  $E(c)=c$, where $c$ is constant\n2.  $E\\{cg(Y)\\}=cE\\{g(Y)\\}$\n3.  $E\\{g_1(Y)+\\cdots+g_n(Y)\\}=E\\{g_1(Y)\\}+\\cdots+E\\{g_n(Y)\\}$",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}