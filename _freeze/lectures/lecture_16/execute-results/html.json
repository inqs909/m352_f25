{
  "hash": "e8d0000803a2034edf26ccb4b77d4736",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Sampling Distributions\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: true \n    chalkboard:\n      src: chalkboard.json\n      theme: whiteboard\n      chalk-width: 4\neditor: source\n---\n\n\n\n## Learning Outcomes\n\n-   Covariance\n\n-   Statistics and Inference\n\n-   Sampling Distributions\n\n-   Central Limit Theorem\n\n# Covariance\n\n## Covariance\n\nThe covariance measures the average dependence between multiple random variables. Let $W=(^X_Y)$ be a random vector. The variance of $W$ is defined as\n\n$$\nVar(W) = \\left(\\begin{array}{cc}\n\\sigma^2_X & \\sigma_{XY} \\\\\n\\sigma_{XY} & \\sigma^2_{Y}\n\\end{array}\\right)\n$$\n\n## Covariance\n\nLet $X_1$ and $X_2$ be 2 random variables with mean $\\mu_1$ and $\\mu_2$, respectively. The covariance of $X_1$ and $X_2$ is defined as\n\n$$\n\\begin{eqnarray*}\nCov(X_1,X_2) & = & E\\{(X_1-\\mu_1)(X_2-\\mu_2)\\}\\\\\n & =& E(X_1X_2)-\\mu_1\\mu_2\n\\end{eqnarray*}\n$$\n\nIf $X_1$ and $X_2$ are independent random variables, then\n\n$$\nCov(X_1,X_2)=0\n$$\n\n## Correlation\n\nThe correlation of $X_1$ and $X_2$ is defined as\n\n$$\n\\rho = Cor(X_1,X_2) = \\frac{Cov(X_1,X_2)}{\\sqrt{Var(X_1)Var(X_2)}}\n$$\n\n## MGF Property: Independence\n\nLet $X$ and $Y$ be independent random variables. Let $Z = X+Y$, the MGF of Z is\n\n$$\nM_Z(t) = M_X(t)M_Y(t)\n$$\n\n# Statistics and Inference\n\n## Sample\n\n## Statistics\n\n## Inference\n\n# Sampling Distributions\n\n## iid Random Variables\n\n## Sampling Distributions\n\nA sampling distribution is the distribution of a statistic. Many known statistics have a known distribution.\n\n## $\\bar X$\n\n## $s^2$\n\n## t-distribution\n\nLet $Z\\sim N(0,1)$, $W\\sim \\chi^2_\\nu$, $Z\\perp W$; therefore:\n\n$$\nT=\\frac{Z}{\\sqrt{W/\\nu}} \\sim t_\\nu\n$$\n\n## F-distribution\n\nLet $W_1\\sim\\chi^2_{\\nu_1}$ $W_2\\sim\\chi^2_{\\nu_2}$, and $W_1\\perp W_2$; therefore:\n\n$$\nF = \\frac{W_1/\\nu_1}{W_2/\\nu_2}\\sim F_{\\nu_1,\\nu_2}\n$$\n\n## Example\n\nLet $X_1, X_2, \\ldots, X_n\\overset{iid}{\\sim}N(\\mu,\\sigma^2)$ , show that $\\bar X \\sim N(\\mu,\\sigma^2/n)$. Note: the MGF of $X_i$ is $e^{\\mu t + \\frac{t^2\\sigma^2}{2}}$.\n\n# Central Limit Theorem\n\n## Central Limit Theorem\n\nLet $X_1, X_2, \\ldots, X_n$ be identical and independent distributed random variables with $E(X_i)=\\mu$ and $Var(X_i) = \\sigmaÂ²$. We define\n\n$$\nY_n = \\sqrt n \\left(\\frac{\\bar X-\\mu}{\\sigma}\\right) \\mathrm{ where }\\ \\bar X = \\frac{1}{n}\\sum^n_{i=1}X_i.\n$$\n\nThen, the distribution of the function $Y_n$ converges to a standard normal distribution function as $n\\rightarrow \\infty$.\n\n## Central Limit Theorem\n\n$$\n\\bar X \\sim N\\left(\\mu, \\frac{\\sigma^2}{n}\\right)\n$$\n\n## Example\n\nLet $X_1, \\ldots, X_n \\overset{iid}{\\sim} \\chi^2_p$, the MGF is $M(t)=(1-2t)^{-p/2}$. Find the distribution of $\\bar X$.",
    "supporting": [
      "lecture_16_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}