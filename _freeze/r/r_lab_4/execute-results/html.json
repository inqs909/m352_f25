{
  "hash": "e6f111123c2ea1b4400e40fbb6afe1f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 4: Generalized Linear Models\"\neditor: source\ndate: 5-7-2022\ndraft: true\n---\n\n## R Packages Used\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(VGAM) # Multinomial and Ordinal Regression\nlibrary(statmod) #Used to obtaine quatile residuals\nlibrary(survival) # Data sets\nlibrary(MASS) # Data Set\nlibrary(GLMsData) # Data Set\nlibrary(tidyverse)\nlibrary(haven) # Reading Stata File\n```\n:::\n\n\n## References\n\nFor more information on this topic, I recommend you reading the following books:\n\n1. Generalized Linear Models with Examples in R - Dunn\n\n2. Vectorized Generalized Linear and Additive Models - Yee\n\n## Generalized Linear Models\n\nIn linear regression, we are fitting a model between a set of predictors and an outcome variable. The outcome variable is generally normally distributed. However, if the outcome is not normally distributed, you must use a generalized linear model to assess the association between a set of predictors and an outcome variable.\n\n### Link Functions\n\nDue to the outcome variable being non-normally distributed, we must use link functions. The link function allows us to link the outcome variable to a linear model.\n\n### Logistic Regression\n\nA logistic regression model is used when the outcome is binary, yes and no. The link function is the logit function that models the association between a set of linear predictors and the odds of observing yes:\n\n$$\n\\log\\left\\{\\frac{P(Y=1)}{P(Y=0)}\\right\\} = \\boldsymbol{X^T\\beta}\n$$\n\nFitting a logistic regression requires you to use the `glm()` function and specifying `family=binomial`. Then use the summary function to obtain the coefficients and `broom::tidy()`^[The double colon tells R to use a specific function from a package. Here, use the tidy function from the broom package.] We are going to fit `y` the presence of bacteria and `ap` active or placebo drug and `hilo` high/low compliance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogit_glm <- glm(y ~ ap + hilo, data = bacteria, \n                 family = binomial)\nsummary(logit_glm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = y ~ ap + hilo, family = binomial, data = bacteria)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.3539     0.2855   4.743 2.11e-06 ***\napp           0.7933     0.3748   2.116   0.0343 *  \nhilolo       -0.4816     0.3480  -1.384   0.1664    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 217.38  on 219  degrees of freedom\nResidual deviance: 209.87  on 217  degrees of freedom\nAIC: 215.87\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n\n```{.r .cell-code}\n## OR ##\n\nlogit_glm %>% broom::tidy(exp=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term        estimate std.error statistic    p.value\n  <chr>          <dbl>     <dbl>     <dbl>      <dbl>\n1 (Intercept)    3.87      0.285      4.74 0.00000211\n2 app            2.21      0.375      2.12 0.0343    \n3 hilolo         0.618     0.348     -1.38 0.166     \n```\n\n\n:::\n:::\n\n\nA $\\beta$ coefficient is interpreted as an odds ratio. The odds of having bacteria presence is 2.21 times higher with a placebo drug than when an active drug is used, adjusting for high/low compliance.\n\n\n### Poisson Regression\n\nPoisson regression is used when the outcome is count data. The link function is the log of the mean count:\n\n$$\n\\log(\\mu)=\\boldsymbol{X^T\\beta}\n$$\n\nFitting a Poisson regression requires you to use the `glm()` function and specifying `family=poisson`. Then use the summary function to obtain the coefficients and `broom::tidy()`^[The double colon tells R to use a specific function from a package. Here, use the tidy function from the broom package.]\n\n\n::: {.cell}\n\n```{.r .cell-code}\npois_glm <- glm(recur ~ treatment + number, data = bladder1, \n                family = poisson)\nsummary(pois_glm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = recur ~ treatment + number, family = poisson, data = bladder1)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(>|z|)    \n(Intercept)          1.00918    0.06057  16.661  < 2e-16 ***\ntreatmentpyridoxine  0.25506    0.06889   3.702 0.000214 ***\ntreatmentthiotepa   -0.45167    0.08626  -5.236 1.64e-07 ***\nnumber               0.11603    0.01620   7.164 7.82e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 868.47  on 293  degrees of freedom\nResidual deviance: 772.19  on 290  degrees of freedom\nAIC: 1529.5\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n\n```{.r .cell-code}\npois_glm %>% broom::tidy(exp=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  term                estimate std.error statistic  p.value\n  <chr>                  <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)            2.74     0.0606     16.7  2.51e-62\n2 treatmentpyridoxine    1.29     0.0689      3.70 2.14e- 4\n3 treatmentthiotepa      0.637    0.0863     -5.24 1.64e- 7\n4 number                 1.12     0.0162      7.16 7.82e-13\n```\n\n\n:::\n:::\n\nThe line `pois_glm %>% broom::tidy(exp=T)` provides the exponentiated values of the $\\beta$ coefficients. Interpreting the `number` variable, as the initial number of tumors increases, the mean number of recurrences increases by a factor of 1.12, adjusting for treatment status.\n\n\n## Questions\n\nAnswer the following questions and check for outliers.\n\n1. The `ccancer` data set in `GLMSData` package contains information on the number of deaths `Count` for different regions in Canada. Fit a model on the variable `Count` and the independent variables `Gender` and `Region`. Use `data(\"ccancer\")` to load the data.\n\n2. The `diabetic` data set in the `survival` package contains information on diabetic retinopathy prescence (`status`) after treatment and follow-up. Fit a model on `status` with independent variables `age` and `trt` (treatment).  \n**Submit your assignment on canvas as an QMD file**\n\n**Due May 14 \\@ 11:59 PM**",
    "supporting": [
      "r_lab_4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}