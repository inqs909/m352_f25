{
  "hash": "14ac367b3bf1b104b348420854d57509",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"RLab 2: Probability Distributions\"\neditor: visual\ndate: 03-01-2022\ndraft: true\n---\n\n## Setup\n\nIf you want to use the custom R Markdown templates for this course install the following packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"remotes\") # Allows you to install packages from GitHub\nremotes::install_github(\"inqs909/inqstools\") # Installs my R package for the course\n```\n:::\n\n\n## Probability\n\nWe will discuss several R functions used for different probability distributions\n\n### Distributions\n\nTo see what distributions R supports, use\n\n``` default\n?Distributions\n```\n\nor\n\n``` default\nhelp(Distributions)\n```\n\nfor more information. Every distribution has four different functions associated to them. The letter at the beginning of the distribution indicates the functions capabilities.\n\n| Letter | Functionality                                                  |\n|:-------|:---------------------------------------------------------------|\n| \"d\"    | returns the height of the probability density function         |\n| \"p\"    | returns the cummulative density function value                 |\n| \"q\"    | returns the inverse cummulative density function (percentiles) |\n| \"r\"    | returns a randomly generated number                            |\n\n### Probabilities\n\nR can compute the probabilities of a distribution given the correct parameters. If you need the cummulative probability, `p` in front of the distribution function is needed. If you need the probability for a discrete distribution, the `d` in front of the distribution function is needed. Below are a few examples.\n\nTo find $P(X \\leq 3 )$ where $X \\sim N(5,2)$. Here we will use the `pnorm()` function and we set `q = 3`, `mean = 5` and `sd = sqrt(2)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(3, 5, sqrt(2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0786496\n```\n\n\n:::\n:::\n\n\nTo find $P(X \\geq 7 )$ where $X \\sim Norm(5, 2)$. Here we will use the `pnorm()` and we set `q = 7`, `mean = 5`, `sd = sqrt(2)`, and `lower.tail = F`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(7, 5, sqrt(2), F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0786496\n```\n\n\n:::\n:::\n\n\n### Percentiles\n\nPercentiles identify the $x_0$ that satisfies $P(X \\le x_0)=p$, where p is the percentile.\n\nFinding the $95^{th}$ percentile from a $N(10, 5)$, we will use the `qnorm()`. We will set `mean=10`, `sd=sqrt(5)`, and `p=0.95`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(.95, 10, sqrt(5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13.678\n```\n\n\n:::\n:::\n\n\nFinding the $95^{th}$ percentile from a $Gamma(6,9)$, we will use the `qgamma()`. We will set `shape=6`, `scale = 9`, and `p=0.95`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqgamma(.95, shape = 6, scale = 9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 94.61731\n```\n\n\n:::\n:::\n\n\n### Random Number Generator\n\nR is capable of generating random numbers. For example if we want to generate a random sample of size fifty from a normal distribution with mean eight and variance three, we will use the `rnorm()`. If we want to generate a random sample from any distribution, use the distribution function with `r` in front of it.\n\nLet's first generate the random sample of fifty from $X \\sim Normn(2.8, 1.3)$. This is done with the `rnorm()` and setting `n = 50`, `mean = 2.8` and `sd = sqrt(1.3)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrnorm(50, 2.8, sqrt(1.3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1.0371904 2.3530054 2.2201133 2.9443522 4.5311829 4.0180506 2.3874037\n [8] 0.2552714 1.4236773 3.4357614 3.5060681 1.9232970 2.4960171 3.7489870\n[15] 1.3523216 2.8490266 3.4804834 3.9872111 2.1320676 3.1139673 2.9122646\n[22] 1.2348649 3.0317492 3.4114369 4.2808612 2.2815268 2.3022371 3.9611224\n[29] 1.4582710 2.9442674 1.6736228 1.9677055 4.1486066 1.2143787 2.9452122\n[36] 5.0579642 3.1509669 2.5997256 0.9782163 2.6752661 3.3412837 3.0954328\n[43] 1.9968093 3.4577079 2.8032046 3.2071992 3.3847039 1.5631256 2.5280591\n[50] 2.1924164\n```\n\n\n:::\n:::\n\n\nNo let's generate a random sample of 100 form an $X \\sim Beta(2,4)$. This is done by using the `rbeta()` and setting `n = 100`, `shape1 = 2`, and `shape2 = 4`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbeta(100, 2, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 0.42233456 0.29711027 0.32488341 0.43537286 0.71156355 0.40356894\n  [7] 0.22739070 0.33535011 0.25647639 0.23094117 0.16269918 0.26344623\n [13] 0.26223497 0.68729925 0.43109015 0.35055695 0.29673685 0.61116261\n [19] 0.25745664 0.48341805 0.21240545 0.35811288 0.66043060 0.27279557\n [25] 0.21774206 0.57806810 0.37640478 0.34824187 0.18649254 0.06298275\n [31] 0.55057189 0.42787299 0.27269673 0.27922231 0.30731856 0.42164809\n [37] 0.48678374 0.30818993 0.11886298 0.73148995 0.45884959 0.40085463\n [43] 0.11718512 0.15190767 0.41649160 0.08885182 0.51676246 0.55974913\n [49] 0.23520093 0.20787844 0.14087653 0.24653172 0.33210950 0.37000710\n [55] 0.14003841 0.45322175 0.28858759 0.87151880 0.48359528 0.54350359\n [61] 0.17021314 0.10575075 0.31775815 0.38188293 0.17240728 0.24820153\n [67] 0.38781672 0.12448427 0.14955236 0.19796144 0.73077365 0.17417943\n [73] 0.13087688 0.46981773 0.29898543 0.22403028 0.40818992 0.28550081\n [79] 0.38552633 0.41768065 0.17948202 0.66843106 0.12376718 0.57812206\n [85] 0.12546249 0.10684296 0.52164319 0.32678648 0.31931890 0.41880920\n [91] 0.40271246 0.23769925 0.23489610 0.36491310 0.14833970 0.29018004\n [97] 0.63244658 0.32077671 0.07482794 0.82867860\n```\n\n\n:::\n:::\n\n\n## Histograms\n\nHistograms are used to plot the frequencies of observed values of a random variable. This provides a rough estimate of how a distribution function will look like. Below, we will use the `hist()` function to plot the distribution of a random sample of 1000 generated from a $Exp(1.3)$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rexp(1000, 1.3)\nhist(x)\n```\n\n::: {.cell-output-display}\n![](r_lab_2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nLooking at the plot above, we can see that the mos common values are around 6. This is to be expected because the $E(X)=6$ from the binomial distribution. Another way to roughly estimate the expected value is by taking the mean:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7357046\n```\n\n\n:::\n:::\n\n\nNotice how close it is to the expected value. If we are interested in computing the $E(X^2)$, we can roughly estimate it by squaring all the values and taking the mean of it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(x^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.143034\n```\n\n\n:::\n:::\n\n\nNow, we know that the variance of a binomial distribution is $np(1-p)$ which leads the $Var(X)=4.2$ with the above distribution. We can roughly estimate the variance with the rough estimates of $E(X^2)-E(X)^2$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(x^2) - mean(x)^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6017732\n```\n\n\n:::\n:::\n\n\nWhile it is not exact, it can give you a rough idea.\n\n## Problems\n\nUse an RMD file to answer the following questions:\n\n1.  Find the following probabilities:\n    a.  $X\\sim N(3, 3.5)$; Find $P(2 \\le X \\le 6)$\n\n    b.  $X\\sim Beta(6,8)$; Find $P(0.5 \\le X \\le .7)$\n\n    c.  $X\\sim Unif(6,25)$; Find $P(16 \\le X \\le 23)$\n2.  Find the following percentiles:\n    a.  $X\\sim Unif(1,5)$; Find the $68$th percentile.\n    b.  $X\\sim N(17, 6)$; Find the $52$th percentile.\n    c.  $X\\sim Exp(1)$; Find the $43$th percentile.\n3.  Generate the 50 realizations of the following random variables:\n    a.  $X\\sim Weibull(3,2)$\n\n    b.  $X\\sim Laplace(2,1/2)$[^1]\n\n    c.  $X\\sim LogNorm(0.5, \\sqrt 2)$\n4.  Generate 500 realizations of the following random variables and create a histogram:\n    1.  $X\\sim Exp(1.5)$\n\n    2.  $X \\sim Exp(2)$\n\n    3.  $X \\sim Exp(5)$\n\n    4.  $X\\sim Exp(10)$\n5.  Generate 5000 realizations of $X\\sim Gamma(7, 12)$ and compute the following rough estimates:\n    1.  $E(X)$\n\n    2.  $E(X^2)$\n\n    3.  $Var(X)$\n\n[^1]: You will need to install the VGAM R package.\n\nSubmit your Lab assignment as an RMD file in Canvas on 3/10/2023 by 11:59 PM.",
    "supporting": [
      "r_lab_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}