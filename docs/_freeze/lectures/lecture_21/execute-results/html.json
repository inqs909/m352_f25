{
  "hash": "b51f97c023ca6be9069f66a676598cb0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Generalized Linear Models\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    sc-sb-title: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: true\n    eval: false\n    message: false\n    warnings: false\n    comment: \"#>\" \n\neditor: source\n---\n\n## Learning Outcomes\n\n-   Exponential Family of Distributions\n\n-   Generalized Linear Models\n\n# Exponential Family of Distributions\n\n## Exponential Family of Distributions\n\nAn exponential family of distributions are random variables that allow their probability density function to have the following form:\n\n$$\nf(y; \\theta,\\phi) = a(y,\\phi)\\exp\\left\\{\\frac{y\\theta-\\kappa(\\theta)}{\\phi}\\right\\}\n$$\n\n-   $\\theta$: is the canonical parameter (also a function of other parameters)\n\n-   $\\kappa(\\theta)$: is a known cumulant function\n\n-   $\\phi>0$: dispersion parameter function\n\n-   $a(y,\\phi)$: normalizing constant\n\n## Canonical Parameter\n\nThe canonical parameter represents the relationship between the random variable and the $E(Y)=\\mu$\n\n## Normal Distribution\n\n$$\nf(x;\\mu,\\sigma^2)=\\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\n$$\n\n## Binomial Distribution\n\n$$\nf(x;n,p)=\\big(^n_x\\big) p^x(1-p)^{n-x}\n$$\n\n## Poisson Distribution\n\n$$\nf(x;\\lambda) = \\frac{e^{-\\lambda}\\lambda^x}{x!} \n$$\n\n## Common Distributions and Canonical Parameters\n\n| Random Variable   | Canonical Parameter                  |\n|-------------------|--------------------------------------|\n| Normal            | $\\mu$                                |\n| Binomial          | $\\log\\left(\\frac{\\mu}{1-\\mu}\\right)$ |\n| Negative Binomial | $\\log\\left(\\frac{\\mu}{\\mu+k}\\right)$ |\n| Poisson           | $\\log(\\mu)$                          |\n| Gamma             | $-\\frac{1}{\\mu}$                     |\n| Inverse Gaussian  | $-\\frac{1}{2\\mu^2}$                  |\n\n# Generalized Linear Models\n\n## Generalized Linear Models\n\nA generalized linear model (GLM) is used to model the association between an outcome variable (of any data type) and a set of predictor values. We estimate a set of regression coefficients $\\boldsymbol \\beta$ to explain how each predictor is related to the expected value of the outcome.\n\n## Generalized Linear Models\n\nA GLM is composed of a systematic and random component.\n\n## Random Component\n\nThe random component is the random variable that defines the randomness and variation of the outcome variable.\n\n## Systematic Component\n\nThe systematic component is the linear model that models the association between a set of predictors and the expected value of Y:\n\n$$\ng(\\mu)=\\eta=\\boldsymbol X_i^\\mathrm T \\boldsymbol \\beta\n$$\n\n-   $\\boldsymbol\\beta$: regression coefficients\n\n-   $\\boldsymbol X_i=(1, X_{i1}, \\ldots, X_{ip})^\\mathrm T$: design vector\n\n-   $\\eta$: linear model\n\n-   $\\mu=E(Y)$\n\n-   $g(\\cdot)$: link function",
    "supporting": [
      "lecture_21_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}